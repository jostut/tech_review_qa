// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StargateAPI.Business.Data;

#nullable disable

namespace StargateAPI.Migrations
{
    [DbContext(typeof(StargateContext))]
    [Migration("20240830204431_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("StargateAPI.Business.Data.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "6ca13d52ca70c883e0f0bb101e425a89e8624de51db2d2392593af6a84118090",
                            PersonId = 1,
                            Username = "john.doe"
                        });
                });

            modelBuilder.Entity("StargateAPI.Business.Data.AstronautDuty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DutyEndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DutyStartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DutyTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("AstronautDuty");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DutyEndDate = new DateTime(2026, 8, 30, 16, 44, 30, 793, DateTimeKind.Local).AddTicks(8511),
                            DutyStartDate = new DateTime(2024, 8, 30, 16, 44, 30, 793, DateTimeKind.Local).AddTicks(8427),
                            DutyTitle = "Commander",
                            PersonId = 1,
                            Rank = "Capt"
                        },
                        new
                        {
                            Id = 2,
                            DutyEndDate = new DateTime(2024, 8, 29, 16, 44, 30, 793, DateTimeKind.Local).AddTicks(8521),
                            DutyStartDate = new DateTime(2022, 8, 30, 16, 44, 30, 793, DateTimeKind.Local).AddTicks(8519),
                            DutyTitle = "Engineer",
                            PersonId = 1,
                            Rank = "1LT"
                        },
                        new
                        {
                            Id = 3,
                            DutyEndDate = new DateTime(2022, 8, 29, 16, 44, 30, 793, DateTimeKind.Local).AddTicks(8526),
                            DutyStartDate = new DateTime(2020, 8, 30, 16, 44, 30, 793, DateTimeKind.Local).AddTicks(8525),
                            DutyTitle = "Trainee",
                            PersonId = 1,
                            Rank = "2LT"
                        });
                });

            modelBuilder.Entity("StargateAPI.Business.Data.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Doe"
                        });
                });

            modelBuilder.Entity("StargateAPI.Business.Data.Account", b =>
                {
                    b.HasOne("StargateAPI.Business.Data.Person", "Person")
                        .WithOne("Account")
                        .HasForeignKey("StargateAPI.Business.Data.Account", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("StargateAPI.Business.Data.AstronautDuty", b =>
                {
                    b.HasOne("StargateAPI.Business.Data.Person", "Person")
                        .WithMany("AstronautDuties")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("StargateAPI.Business.Data.Person", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("AstronautDuties");
                });
#pragma warning restore 612, 618
        }
    }
}
